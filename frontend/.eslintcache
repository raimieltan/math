[{"C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\index.js":"1","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\App.js":"2","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\about.jsx":"4","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\login.jsx":"5","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\main-page.jsx":"6","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\problem.jsx":"7","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\signup.jsx":"8","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\homepage.jsx":"9","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\profile.jsx":"10","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\problemCard.jsx":"11","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\createProblem.jsx":"12","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\quiz.jsx":"13"},{"size":517,"mtime":1614051896261,"results":"14","hashOfConfig":"15"},{"size":2565,"mtime":1614349849977,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1614051896261,"results":"17","hashOfConfig":"15"},{"size":171,"mtime":1614051896246,"results":"18","hashOfConfig":"15"},{"size":2622,"mtime":1614051896247,"results":"19","hashOfConfig":"15"},{"size":2036,"mtime":1614051896247,"results":"20","hashOfConfig":"15"},{"size":6295,"mtime":1614424441796,"results":"21","hashOfConfig":"15"},{"size":3340,"mtime":1614051896251,"results":"22","hashOfConfig":"15"},{"size":1068,"mtime":1614051896246,"results":"23","hashOfConfig":"15"},{"size":2525,"mtime":1614051896250,"results":"24","hashOfConfig":"15"},{"size":4555,"mtime":1614058524907,"results":"25","hashOfConfig":"15"},{"size":7723,"mtime":1614426854964,"results":"26","hashOfConfig":"15"},{"size":3419,"mtime":1614439999186,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ab1w48",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\index.js",[],["59","60"],"C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\App.js",[],"C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\about.jsx",[],"C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\login.jsx",[],"C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\main-page.jsx",[],"C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\problem.jsx",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import { Fragment, useState, useEffect } from 'react';\r\nimport './style.css';\r\nimport ProblemCard from './problemCard'\r\n\r\nexport default function Quiz() {\r\n  // variable_x: 56, variable_y: 36\r\n  const [problems, setProblems] = useState([]);\r\n  const [showScore, setShowScore] = useState(false)\r\n  const [score, setScore] = useState(0)\r\n  const [choices, setChoices] = useState([])\r\n  const choicesLetters = [1, 2, 3, 4]\r\n  const [variables, setVariables] = useState({});\r\n  const [currentProblem, setCurrentProblem] = useState({});\r\n  const [blankInput, setBlankInput] = useState();\r\n  const [showSolution, setShowSolution] = useState(false);\r\n  const [correct, setCorrect] = useState();\r\n\r\n  const shuffleArray = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  }\r\n\r\n  const fetchProblems = async () => {\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/problems\");\r\n      const parseRes = await response.json()\r\n      shuffleArray(parseRes)\r\n      setProblems(parseRes);\r\n      console.log(problems)\r\n\r\n    } catch (error) {\r\n      console.error(\"Error encountered on the frontend. ERROR: \", error.message);\r\n    }\r\n  }\r\n\r\n  const fetchValues = async () => {\r\n\r\n    try {\r\n\r\n      const response = await fetch(\"http://localhost:8000/variables\")\r\n      const parseRes = await response.json()\r\n\r\n      //shuffle values\r\n      shuffleArray(parseRes);\r\n      setVariables(parseRes[0]);\r\n\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n\r\n  }\r\n\r\n  const fetchQuestions = () => {\r\n\r\n    try {\r\n\r\n      let fillBlanksProblems =\r\n        [\r\n          {\r\n            id: 1,\r\n            problem: `Use long multiplication to calculate ${variables.variable_x} X ${variables.variable_y}`,\r\n            answer: eval(\"variables.variable_x * variables.variable_y\"),\r\n            solution: 'Multiply the values.'\r\n          },\r\n\r\n          {\r\n            id: 2,\r\n            problem: `What is the difference of ${variables.variable_x} - ${variables.variable_y}`,\r\n            answer: eval(\"variables.variable_x - variables.variable_y\"),\r\n            solution: 'Subtract the values.'\r\n          },\r\n\r\n          {\r\n            id: 3,\r\n            problem: `What is the sum of ${variables.variable_x} and ${variables.variable_y}`,\r\n            answer: eval(\"variables.variable_x + variables.variable_y\"),\r\n            solution: 'Add the values.'\r\n          }\r\n        ]\r\n\r\n      // shuffle questions\r\n      shuffleArray(fillBlanksProblems);\r\n      setCurrentProblem(fillBlanksProblems[0]);\r\n\r\n    } catch (error) {\r\n      console.error(\"ERROR:\", error.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, [variables])\r\n\r\n  useEffect(() => {\r\n    fetchValues();\r\n    fetchProblems();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const addScore = () => {\r\n    setScore(score + 1)\r\n\r\n  }\r\n\r\n  const submitTest = () => {\r\n    setShowScore(true)\r\n  }\r\n\r\n  return problems.length > 0 ? (\r\n\r\n    <div>\r\n\r\n      {showScore ? (\r\n        <div>\r\n          <div class=\"header\">\r\n\r\n            <a href=\"/\">\r\n              <div id=\"logo\"></div>\r\n            </a>\r\n\r\n            <ul>\r\n              <li class=\"selected\">\r\n                <a href=\"/main-page\">Home</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/profile\">Profile</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/learn\">Learn</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <h1>Your score is {score} </h1>\r\n        </div>\r\n      ) : (\r\n\r\n          <div>\r\n            <div class=\"header\">\r\n\r\n              <a href=\"/\">\r\n                <div id=\"logo\"></div>\r\n              </a>\r\n\r\n              <ul>\r\n                <li class=\"selected\">\r\n                  <a href=\"/main-page\">Home</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"/profile\">Profile</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"/learn\">Learn</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div>\r\n\r\n              <div id=\"carouselExampleControls\" class=\"carousel slide\" data-interval=\"false\">\r\n                <div class=\"carousel-inner\">\r\n                  <div class=\"carousel-item active\">\r\n                    <ProblemCard\r\n                      id={currentProblem.id}\r\n                      problem={currentProblem.problem}\r\n                      solution={currentProblem.solution}\r\n                      answer={currentProblem.answer}\r\n                      addScore={addScore}\r\n                      index={problems.length}\r\n                      formula={true}\r\n                    />\r\n                  </div>\r\n                  {\r\n                    problems.map((problem) => {\r\n                      return <div class=\"carousel-item\">\r\n                        <ProblemCard\r\n                          id={problem.problem_id}\r\n                          problem={problem.problem_title}\r\n                          solution={problem.problem_solution}\r\n                          answer={problem.problem_answer}\r\n                          addScore={addScore}\r\n                          index={problems.indexOf(problem)}\r\n                          formula={false}\r\n                        />\r\n                      </div>\r\n\r\n                    })\r\n                  }\r\n\r\n                </div>\r\n                <a class=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\r\n\r\n                  <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                  <span class=\"sr-only\">Previous</span>\r\n\r\n                </a>\r\n                <a class=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\r\n                  <span class=\"carousel-control-next-icon\" aria-hidden=\"true\">                </span> \r\n                  <span class=\"sr-only\">Next</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n\r\n            <div >\r\n              <button class = \"submit-button\" onClick={() => { submitTest() }}>Submit Quiz</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n    </div>\r\n\r\n\r\n\r\n  ) : (\r\n      <h1>Loading..</h1>\r\n    )\r\n} ","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\signup.jsx",["76"],"import React, { useState } from \"react\"\r\nimport { toast } from \"react-toastify\"\r\n \r\nimport './style.css';\r\n\r\n\r\n\r\nfunction SignUp({ setAuth }) {\r\n\r\n    const [inputs, setInputs ] = useState({\r\n        fname: \"\",\r\n        lname: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const { fname, lname, email, password} = inputs\r\n\r\n    const onChange = (e) => {\r\n        setInputs({...inputs, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const body = { fname, lname, email, password }\r\n\r\n        try {\r\n\r\n            const response = await fetch(\"http://localhost:8000/auth/register\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-type\": \"application/json\"},\r\n                body: JSON.stringify(body)\r\n            })\r\n\r\n            const parseRes = await response.json()\r\n            \r\n            if(parseRes.token) {\r\n                setAuth(true)\r\n                localStorage.setItem(\"token\" , parseRes.token)\r\n                \r\n\r\n            }\r\n        } catch (error) {\r\n            setAuth(false)\r\n            console.error(error.message)\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"signup\">\r\n\r\n            <body>\r\n                <div class=\"page\">\r\n                <div class=\"header\">\r\n                    <div>\r\n\r\n                        <a href=\"/\">\r\n                            <div id=\"logo\"></div>\r\n                        </a>\r\n\r\n                        <ul>\r\n                            <li class=\"selected\">\r\n                                <a href=\"/\">Home</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/signup\">Sign Up</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/login\">Login</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                    <div class=\"body\">\r\n                        <div id=\"featured\">\r\n                        \r\n                        <form onSubmit={onSubmitForm}>\r\n\r\n                            <input type=\"fname\" name=\"fname\" placeholder=\"First Name\" value={fname} onChange={e => onChange(e)}></input>\r\n                            <input type=\"lname\" name=\"lname\" placeholder=\"Last Name\" value={lname} onChange={e => onChange(e)}></input>\r\n                            <input type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={e => onChange(e)}></input>\r\n                            <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={e => onChange(e)}></input>\r\n                            {/* <h1>Test commit purposes</h1> */} <br/> <br/>\r\n                            <button id = \"btn\">Submit</button>\r\n                        </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"footer\">\r\n                        <div>\r\n                            <p class=\"footnote\">&#169; Copyright &#169; 2011. Company name. All rights reserved</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </body>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\homepage.jsx",[],"C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\profile.jsx",[],"C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\problemCard.jsx",["77","78","79"],"import { Fragment, useState, useEffect } from 'react';\r\nimport './style.css';\r\nexport default function Quiz({ id, problem, solution, answer, addScore, index, formula }) {\r\n    const [choices, setChoices] = useState([])\r\n    const choicesLetters = [1, 2, 3, 4]\r\n    const [blankInput, setBlankInput] = useState();\r\n\r\n\r\n    const shuffleArray = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n    const fetchChoices = async (id) => {\r\n\r\n        try {\r\n\r\n            const response = await fetch(`http://localhost:8000/choices/${id}`)\r\n            const parseRes = await response.json()\r\n\r\n            //shuffle choices\r\n            shuffleArray(parseRes)\r\n\r\n            choicesLetters[0] = { id: parseRes[0].id, name: 'A.) ', content: parseRes[0].content, is_correct: parseRes[0].is_correct }\r\n            choicesLetters[1] = { id: parseRes[1].id, name: 'B.) ', content: parseRes[1].content, is_correct: parseRes[1].is_correct }\r\n            choicesLetters[2] = { id: parseRes[2].id, name: 'C.) ', content: parseRes[2].content, is_correct: parseRes[2].is_correct }\r\n            choicesLetters[3] = { id: parseRes[3].id, name: 'D.) ', content: parseRes[3].content, is_correct: parseRes[3].is_correct }\r\n\r\n            setChoices(choicesLetters)\r\n\r\n        } catch (error) {\r\n            console.error(error.message)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClick = (isCorrect) => {\r\n        if (isCorrect) {\r\n            console.log(addScore())\r\n        }\r\n        else {\r\n            console.log(isCorrect)\r\n        }\r\n\r\n        let choiceContainer = document.getElementById(`choices${id}`);\r\n        choiceContainer.style.display = \"none\"\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        setBlankInput(event.target.value);\r\n    }\r\n\r\n    const handleAnswerSubmit = (event) => {\r\n        event.preventDefault();\r\n        let inputContainer = document.getElementById(`form${id}`);\r\n       \r\n        if (blankInput == answer) {\r\n            console.log(addScore())\r\n        } else {\r\n            console.log(false)\r\n        }\r\n        inputContainer.style.display = \"none\"\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchChoices(id)\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div class=\"body-problem\">\r\n            <div className=\"problem-card\">\r\n\r\n                <div class=\"card border-info mb-3\">\r\n                    <div class=\"card-body\">\r\n                        <p>{problem}</p>\r\n\r\n                        {!formula ? (\r\n                            <div id={\"choices\" + id}>\r\n                                {choices.map((c) => {\r\n\r\n                                    return <div key={c.id} class=\"choices\">\r\n                                        <ul>\r\n                                            <li class=\"li-choices\">\r\n                                                <button value={c.content} onClick={() => { handleClick(c.is_correct) }}>{c.name + \" \" + c.content}</button>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                })}\r\n                            </div>\r\n\r\n                        )\r\n                            : (\r\n                                <div id={\"form\" + id}>\r\n                                    <form onSubmit={handleAnswerSubmit}>\r\n                                        <input\r\n                                            id=\"blankInput\"\r\n                                            value={blankInput}\r\n                                            onChange={onChange}\r\n                                            required\r\n                                        >\r\n                                        </input>\r\n                                        <button type=\"form\">Submit</button>\r\n                                    </form>\r\n                                </div>\r\n                            )}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n//   const handleNextOptionClick = (isCorrect) => {\r\n//     if (isCorrect) {\r\n//       setScore(score + 1)\r\n//     }\r\n//     else {\r\n//       console.log(isCorrect)\r\n//     }\r\n//     const nextQuestion = currentQuestion + 1\r\n\r\n//     if (nextQuestion < problems.length) {\r\n//       setCurrentQuestion(nextQuestion)\r\n//     }\r\n//     else {\r\n//       setShowScore(true)\r\n//     }\r\n//   }","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\createProblem.jsx",["80","81","82","83"],"import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nexport default function CreateProblem() {\r\n\r\n  const [variables, setVariables] = useState([]);\r\n  const [type, setType] = useState(0);\r\n\r\n  const [inputs, setInputs] = useState({\r\n    question: \"\",\r\n    formula: \"\",\r\n    choiceCount: \"\",\r\n    variableName: \"\",\r\n    variableMin: \"\",\r\n    variableMax: \"\"\r\n  });\r\n\r\n  const { question, formula, choiceCount, variableName, variableMin, variableMax } = inputs;\r\n\r\n  const handleType = (e) => {\r\n    const id = e.target.value;\r\n    setType(id);\r\n  }\r\n\r\n  const fillInTheBlankSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const body = { question, formula, choiceCount: null, type: 'fillInTheBlanks' };\r\n\r\n    try {\r\n\r\n      const response = await fetch(\"http://localhost:8000/problems/create\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n      const parseRes = await response.json();\r\n      const problemId = parseRes.rows[0].id;\r\n\r\n\r\n      for (const addedVariables of variables) {\r\n\r\n        try {\r\n\r\n          const body = { variable: addedVariables.variable, min: addedVariables.min, max: addedVariables.max };\r\n\r\n          const response = await fetch(`http://localhost:8000/variables/assign/${problemId}`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body)\r\n          })\r\n\r\n          const parseRes = await response.json();\r\n\r\n        } catch (error) {\r\n          console.log(\"ERROR:\", error.message);\r\n        }\r\n\r\n      }\r\n\r\n      window.alert(\"Problem Added Successfully!\")\r\n\r\n    } catch (error) {\r\n      console.log(\"ERROR:\", error.message);\r\n    }\r\n  }\r\n\r\n  const multipleChoiceSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const body = { question, formula, choiceCount, type: 'multipleChoice' };\r\n\r\n    try {\r\n\r\n      const response = await fetch(\"http://localhost:8000/problems/create\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n      const parseRes = await response.json();\r\n      const problemId = parseRes.rows[0].id;\r\n\r\n\r\n      for (const addedVariables of variables) {\r\n\r\n        try {\r\n\r\n          const body = { variable: addedVariables.variable, min: addedVariables.min, max: addedVariables.max };\r\n\r\n          const response = await fetch(`http://localhost:8000/variables/assign/${problemId}`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body)\r\n          })\r\n\r\n          const parseRes = await response.json();\r\n\r\n        } catch (error) {\r\n          console.log(\"ERROR:\", error.message);\r\n        }\r\n\r\n      }\r\n\r\n      window.alert(\"Problem Added Successfully!\")\r\n\r\n    } catch (error) {\r\n      console.log(\"ERROR:\", error.message);\r\n    }\r\n  }\r\n\r\n  const handleInputs = (e) => {\r\n    e.preventDefault();\r\n    setInputs({\r\n      question,\r\n      formula,\r\n      variableName,\r\n      variableMin,\r\n      variableMax,\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  const addVariable = (e) => {\r\n    e.preventDefault();\r\n    setVariables(variable => variable.concat({ variable: variableName, min: variableMin, max: variableMax }))\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <select id=\"problemType\" class=\"form form-select\" onChange={handleType}>\r\n        <option value=\"1\">Multiple Choice</option>\r\n        <option value=\"0\">Fill in the Blanks</option>\r\n      </select>\r\n\r\n      <div id=\"fillInTheBlanks\">\r\n        <form onSubmit={fillInTheBlankSubmit}>\r\n\r\n          <textarea\r\n            placeholder=\"Enter Question Here\"\r\n            id=\"question\"\r\n            value={question}\r\n            rows=\"2\"\r\n            cols=\"10\"\r\n            class=\"form-control\"\r\n            onChange={handleInputs}\r\n          />\r\n\r\n          <input\r\n            placeholder=\"Enter Formula Here\"\r\n            id=\"formula\"\r\n            value={formula}\r\n            class=\"form-control\"\r\n            onChange={handleInputs}\r\n          />\r\n\r\n          <span id=\"variable-inputs\">\r\n            <input\r\n              id=\"variableName\"\r\n              value={variableName}\r\n              placeholder=\"Variable Name\"\r\n              onChange={handleInputs}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              id=\"variableMax\"\r\n              value={variableMax}\r\n              placeholder=\"Max Value\"\r\n              onChange={handleInputs}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              id=\"variableMin\"\r\n              value={variableMin}\r\n              placeholder=\"Min Value\"\r\n              onChange={handleInputs}\r\n            />\r\n          </span>\r\n\r\n          <div>\r\n            <button id=\"add-variable\" onClick={addVariable}>Add Variable</button>\r\n          </div>\r\n\r\n          <div class=\"container\" id=\"variable-container\">\r\n            {variables.length !== 0\r\n              ?\r\n              variables.map(variable =>\r\n                <div>\r\n                  <div id=\"variable-box\">\r\n                    Variable Name: {variable.variable}<br />\r\n                        Variable Min: {variable.min}<br />\r\n                        Variable Max: {variable.max}<br />\r\n                  </div>\r\n                </div>\r\n              )\r\n              :\r\n              \"\"\r\n            }\r\n          </div>\r\n\r\n          <button id=\"form\">Add Problem</button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* <div id=\"multiple-choices\">\r\n        <form onSubmit={multipleChoiceSubmit}>\r\n\r\n          <textarea\r\n            placeholder=\"Enter Question Here\"\r\n            id=\"question\"\r\n            value={question}\r\n            class=\"form-control\"\r\n            onChange={handleInputs}\r\n          />\r\n\r\n          <input\r\n            placeholder=\"Enter Formula Here\"\r\n            id=\"formula\"\r\n            value={formula}\r\n            class=\"form-control\"\r\n            onChange={handleInputs}\r\n          />\r\n\r\n          <span id=\"variable-inputs\">\r\n            <input\r\n              id=\"variableName\"\r\n              value={variableName}\r\n              placeholder=\"Variable Name\"\r\n              onChange={handleInputs}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              id=\"variableMax\"\r\n              value={variableMax}\r\n              placeholder=\"Max Value\"\r\n              onChange={handleInputs}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              id=\"variableMin\"\r\n              value={variableMin}\r\n              placeholder=\"Min Value\"\r\n              onChange={handleInputs}\r\n            />\r\n          </span>\r\n\r\n          <button id=\"add-variables\" onClick={addVariable}>Add Variable</button>\r\n\r\n          <div class=\"container\" id=\"variable-container\">\r\n            {variables.length !== 0\r\n              ?\r\n              variables.map(variable =>\r\n                <div>\r\n                  <div id=\"variable-box\">\r\n                    Variable Name: {variable.variable}<br />\r\n                    Variable Min: {variable.min}<br />\r\n                    Variable Max: {variable.max}<br />\r\n                  </div>\r\n                </div>\r\n              )\r\n              :\r\n              \"\"\r\n            }\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              type=\"number\"\r\n              id=\"choiceCount\"\r\n              value={choiceCount}\r\n              placeholder=\"Number of Choices\"\r\n              onChange={handleInputs}\r\n            />\r\n          </div>\r\n\r\n          <button id=\"form\">Add Problem</button>\r\n\r\n        </form>\r\n      </div> */}\r\n\r\n    </Fragment>\r\n  )\r\n}","C:\\Users\\kmcae\\Desktop\\online-class\\second-sem\\testing\\math-web-app\\math\\frontend\\src\\components\\quiz.jsx",["84","85","86","87","88","89","90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":18},{"ruleId":"95","severity":1,"message":"99","line":10,"column":10,"nodeType":"97","messageId":"98","endLine":10,"endColumn":17},{"ruleId":"95","severity":1,"message":"100","line":10,"column":19,"nodeType":"97","messageId":"98","endLine":10,"endColumn":29},{"ruleId":"95","severity":1,"message":"101","line":11,"column":9,"nodeType":"97","messageId":"98","endLine":11,"endColumn":23},{"ruleId":"95","severity":1,"message":"102","line":14,"column":10,"nodeType":"97","messageId":"98","endLine":14,"endColumn":20},{"ruleId":"95","severity":1,"message":"103","line":14,"column":22,"nodeType":"97","messageId":"98","endLine":14,"endColumn":35},{"ruleId":"95","severity":1,"message":"104","line":15,"column":10,"nodeType":"97","messageId":"98","endLine":15,"endColumn":22},{"ruleId":"95","severity":1,"message":"105","line":15,"column":24,"nodeType":"97","messageId":"98","endLine":15,"endColumn":39},{"ruleId":"95","severity":1,"message":"106","line":16,"column":10,"nodeType":"97","messageId":"98","endLine":16,"endColumn":17},{"ruleId":"95","severity":1,"message":"107","line":16,"column":19,"nodeType":"97","messageId":"98","endLine":16,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":65,"column":21,"nodeType":"110","messageId":"111","endLine":65,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":72,"column":21,"nodeType":"110","messageId":"111","endLine":72,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":79,"column":21,"nodeType":"110","messageId":"111","endLine":79,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":95,"column":6,"nodeType":"114","endLine":95,"endColumn":17,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":101,"column":6,"nodeType":"114","endLine":101,"endColumn":8,"suggestions":"117"},{"ruleId":"95","severity":1,"message":"118","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":60,"column":24,"nodeType":"121","messageId":"111","endLine":60,"endColumn":26},{"ruleId":"112","severity":1,"message":"122","line":71,"column":8,"nodeType":"114","endLine":71,"endColumn":10,"suggestions":"123"},{"ruleId":"95","severity":1,"message":"124","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":14},{"ruleId":"95","severity":1,"message":"125","line":53,"column":17,"nodeType":"97","messageId":"98","endLine":53,"endColumn":25},{"ruleId":"95","severity":1,"message":"126","line":68,"column":9,"nodeType":"97","messageId":"98","endLine":68,"endColumn":29},{"ruleId":"95","severity":1,"message":"125","line":97,"column":17,"nodeType":"97","messageId":"98","endLine":97,"endColumn":25},{"ruleId":"95","severity":1,"message":"99","line":11,"column":10,"nodeType":"97","messageId":"98","endLine":11,"endColumn":17},{"ruleId":"95","severity":1,"message":"100","line":11,"column":19,"nodeType":"97","messageId":"98","endLine":11,"endColumn":29},{"ruleId":"95","severity":1,"message":"127","line":102,"column":9,"nodeType":"97","messageId":"98","endLine":102,"endColumn":10},{"ruleId":"95","severity":1,"message":"128","line":103,"column":9,"nodeType":"97","messageId":"98","endLine":103,"endColumn":10},{"ruleId":"112","severity":1,"message":"129","line":110,"column":6,"nodeType":"114","endLine":110,"endColumn":8,"suggestions":"130"},{"ruleId":"112","severity":1,"message":"131","line":114,"column":6,"nodeType":"114","endLine":114,"endColumn":16,"suggestions":"132"},{"ruleId":"112","severity":1,"message":"133","line":118,"column":6,"nodeType":"114","endLine":118,"endColumn":17,"suggestions":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'choices' is assigned a value but never used.","'setChoices' is assigned a value but never used.","'choicesLetters' is assigned a value but never used.","'blankInput' is assigned a value but never used.","'setBlankInput' is assigned a value but never used.","'showSolution' is assigned a value but never used.","'setShowSolution' is assigned a value but never used.","'correct' is assigned a value but never used.","'setCorrect' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchQuestions'. Either include it or remove the dependency array.","ArrayExpression",["137"],"React Hook useEffect has missing dependencies: 'fetchProblems' and 'fetchValues'. Either include them or remove the dependency array.",["138"],"'toast' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has missing dependencies: 'fetchChoices' and 'id'. Either include them or remove the dependency array.",["139"],"'type' is assigned a value but never used.","'parseRes' is assigned a value but never used.","'multipleChoiceSubmit' is assigned a value but never used.","'x' is assigned a value but never used.","'y' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProblems'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has a missing dependency: 'assignVariables'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'problems' and 'replaceQuestionVariables'. Either include them or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [fetchQuestions, variables]",{"range":"155","text":"156"},"Update the dependencies array to be: [fetchProblems, fetchValues]",{"range":"157","text":"158"},"Update the dependencies array to be: [fetchChoices, id]",{"range":"159","text":"160"},"Update the dependencies array to be: [fetchProblems]",{"range":"161","text":"162"},"Update the dependencies array to be: [assignVariables, problems]",{"range":"163","text":"164"},"Update the dependencies array to be: [problems, replaceQuestionVariables, variables]",{"range":"165","text":"166"},[2781,2792],"[fetchQuestions, variables]",[2867,2869],"[fetchProblems, fetchValues]",[2328,2330],"[fetchChoices, id]",[2941,2943],"[fetchProblems]",[2998,3008],"[assignVariables, problems]",[3092,3103],"[problems, replaceQuestionVariables, variables]"]