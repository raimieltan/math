[{"/home/wex/SE/se 222/math/frontend/src/index.js":"1","/home/wex/SE/se 222/math/frontend/src/App.js":"2","/home/wex/SE/se 222/math/frontend/src/reportWebVitals.js":"3","/home/wex/SE/se 222/math/frontend/src/components/homepage.jsx":"4","/home/wex/SE/se 222/math/frontend/src/components/login.jsx":"5","/home/wex/SE/se 222/math/frontend/src/components/signup.jsx":"6","/home/wex/SE/se 222/math/frontend/src/components/profile.jsx":"7","/home/wex/SE/se 222/math/frontend/src/components/about.jsx":"8","/home/wex/SE/se 222/math/frontend/src/components/main-page.jsx":"9","/home/wex/SE/se 222/math/frontend/src/components/problem.jsx":"10","/home/wex/SE/se 222/math/frontend/src/components/createProblem.jsx":"11","/home/wex/SE/se 222/math/frontend/src/components/quiz.jsx":"12","/home/wex/SE/se 222/math/frontend/src/components/problemCard.jsx":"13","/home/wex/SE/se 222/math/frontend/src/components/tacher-page.jsx":"14"},{"size":500,"mtime":1614503030320,"results":"15","hashOfConfig":"16"},{"size":2628,"mtime":1614503849158,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1614503030320,"results":"18","hashOfConfig":"16"},{"size":1013,"mtime":1614503030316,"results":"19","hashOfConfig":"16"},{"size":2533,"mtime":1614503030316,"results":"20","hashOfConfig":"16"},{"size":3568,"mtime":1614503030316,"results":"21","hashOfConfig":"16"},{"size":2430,"mtime":1614503030316,"results":"22","hashOfConfig":"16"},{"size":163,"mtime":1614503030316,"results":"23","hashOfConfig":"16"},{"size":2001,"mtime":1614503030316,"results":"24","hashOfConfig":"16"},{"size":6072,"mtime":1614503030316,"results":"25","hashOfConfig":"16"},{"size":9316,"mtime":1614510276199,"results":"26","hashOfConfig":"16"},{"size":3285,"mtime":1614503030316,"results":"27","hashOfConfig":"16"},{"size":4046,"mtime":1614503030316,"results":"28","hashOfConfig":"16"},{"size":2674,"mtime":1614506028531,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wnkf8m",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/wex/SE/se 222/math/frontend/src/index.js",[],"/home/wex/SE/se 222/math/frontend/src/App.js",[],"/home/wex/SE/se 222/math/frontend/src/reportWebVitals.js",[],"/home/wex/SE/se 222/math/frontend/src/components/homepage.jsx",[],["63","64"],"/home/wex/SE/se 222/math/frontend/src/components/login.jsx",[],"/home/wex/SE/se 222/math/frontend/src/components/signup.jsx",["65"],"import React, { useState } from \"react\"\nimport { toast } from \"react-toastify\"\n\nimport './style.css';\n\n\n\nfunction SignUp({ setAuth }) {\n\n    const [inputs, setInputs] = useState({\n        fname: \"\",\n        lname: \"\",\n        email: \"\",\n        password: \"\"\n    })\n\n    const { fname, lname, email, password } = inputs\n\n    const onChange = (e) => {\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\n    }\n\n    const onSubmitForm = async (e) => {\n        e.preventDefault()\n\n        const body = { fname, lname, email, password }\n\n        try {\n\n            const response = await fetch(\"http://localhost:8000/auth/register\", {\n                method: \"POST\",\n                headers: { \"Content-type\": \"application/json\" },\n                body: JSON.stringify(body)\n            })\n\n            const parseRes = await response.json()\n\n            if (parseRes.token) {\n                setAuth(true)\n                localStorage.setItem(\"token\", parseRes.token)\n\n\n            }\n        } catch (error) {\n            setAuth(false)\n            console.error(error.message)\n            window.location.reload(false);\n        }\n    }\n\n    return (\n        <div className=\"signup\">\n\n            <body>\n                <div class=\"page\">\n                    <div class=\"header\">\n                        <div>\n\n                            <a href=\"/\">\n                                <div id=\"logo\"></div>\n                            </a>\n\n                            <ul>\n                                <li class=\"selected\">\n                                    <a href=\"/\">Home</a>\n                                </li>\n                                <li>\n                                    <a href=\"/signup\">Sign Up</a>\n                                </li>\n                                <li>\n                                    <a href=\"/login\">Login</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class=\"body\">\n                        <div id=\"featured\">\n\n                            <form onSubmit={onSubmitForm}>\n\n                                <input type=\"fname\" name=\"fname\" placeholder=\"First Name\" value={fname} onChange={e => onChange(e)}></input>\n                                <input type=\"lname\" name=\"lname\" placeholder=\"Last Name\" value={lname} onChange={e => onChange(e)}></input>\n                                <input type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={e => onChange(e)}></input>\n                                <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={e => onChange(e)}></input>\n                                <div class=\"check\">\n                                        <input type=\"radio\" id=\"radio02-01\" name=\"demo02\" /><label for=\"radio02-01\">Teacher</label>\n                                        <input type=\"radio\" id=\"radio02-02\" name=\"demo02\" /><label for=\"radio02-02\">Student</label>\n                                </div><br/>\n                                <button id=\"btn\">Submit</button>\n                            </form>\n\n                        </div>\n                    </div>\n                    <div class=\"footer\">\n                        <div>\n                            <p class=\"footnote\">&#169; Copyright &#169; 2011. Company name. All rights reserved</p>\n                        </div>\n                    </div>\n                </div>\n            </body>\n        </div>\n    );\n}\n\nexport default SignUp;\n","/home/wex/SE/se 222/math/frontend/src/components/profile.jsx",[],"/home/wex/SE/se 222/math/frontend/src/components/about.jsx",[],"/home/wex/SE/se 222/math/frontend/src/components/main-page.jsx",[],"/home/wex/SE/se 222/math/frontend/src/components/problem.jsx",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"import { Fragment, useState, useEffect } from 'react';\nimport './style.css';\nimport ProblemCard from './problemCard'\n\nexport default function Quiz() {\n  // variable_x: 56, variable_y: 36\n  const [problems, setProblems] = useState([]);\n  const [showScore, setShowScore] = useState(false)\n  const [score, setScore] = useState(0)\n  const [choices, setChoices] = useState([])\n  const choicesLetters = [1, 2, 3, 4]\n  const [variables, setVariables] = useState({});\n  const [currentProblem, setCurrentProblem] = useState({});\n  const [blankInput, setBlankInput] = useState();\n  const [showSolution, setShowSolution] = useState(false);\n  const [correct, setCorrect] = useState();\n\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  const fetchProblems = async () => {\n\n    try {\n      const response = await fetch(\"http://localhost:8000/problems\");\n      const parseRes = await response.json()\n      shuffleArray(parseRes)\n      setProblems(parseRes);\n      console.log(problems)\n\n    } catch (error) {\n      console.error(\"Error encountered on the frontend. ERROR: \", error.message);\n    }\n  }\n\n  const fetchValues = async () => {\n\n    try {\n\n      const response = await fetch(\"http://localhost:8000/variables\")\n      const parseRes = await response.json()\n\n      //shuffle values\n      shuffleArray(parseRes);\n      setVariables(parseRes[0]);\n\n    } catch (error) {\n      console.error(error.message);\n    }\n\n  }\n\n  const fetchQuestions = () => {\n\n    try {\n\n      let fillBlanksProblems =\n        [\n          {\n            id: 1,\n            problem: `Use long multiplication to calculate ${variables.variable_x} X ${variables.variable_y}`,\n            answer: eval(\"variables.variable_x * variables.variable_y\"),\n            solution: 'Multiply the values.'\n          },\n\n          {\n            id: 2,\n            problem: `What is the difference of ${variables.variable_x} - ${variables.variable_y}`,\n            answer: eval(\"variables.variable_x - variables.variable_y\"),\n            solution: 'Subtract the values.'\n          },\n\n          {\n            id: 3,\n            problem: `What is the sum of ${variables.variable_x} and ${variables.variable_y}`,\n            answer: eval(\"variables.variable_x + variables.variable_y\"),\n            solution: 'Add the values.'\n          }\n        ]\n\n      // shuffle questions\n      shuffleArray(fillBlanksProblems);\n      setCurrentProblem(fillBlanksProblems[0]);\n\n    } catch (error) {\n      console.error(\"ERROR:\", error.message)\n    }\n  }\n\n  useEffect(() => {\n    fetchQuestions();\n  }, [variables])\n\n  useEffect(() => {\n    fetchValues();\n    fetchProblems();\n\n  }, []);\n\n\n\n  const addScore = () => {\n    setScore(score + 1)\n\n  }\n\n  const submitTest = () => {\n    setShowScore(true)\n  }\n\n  return problems.length > 0 ? (\n\n    <div>\n\n      {showScore ? (\n        <div>\n          <div class=\"header\">\n\n            <a href=\"/\">\n              <div id=\"logo\"></div>\n            </a>\n\n            <ul>\n              <li class=\"selected\">\n                <a href=\"/main-page\">Home</a>\n              </li>\n              <li>\n                <a href=\"/profile\">Profile</a>\n              </li>\n              <li>\n                <a href=\"/learn\">Learn</a>\n              </li>\n            </ul>\n          </div>\n          <h1>Your score is {score} </h1>\n        </div>\n      ) : (\n\n          <div>\n            <div class=\"header\">\n\n              <a href=\"/\">\n                <div id=\"logo\"></div>\n              </a>\n\n              <ul>\n                <li class=\"selected\">\n                  <a href=\"/main-page\">Home</a>\n                </li>\n                <li>\n                  <a href=\"/profile\">Profile</a>\n                </li>\n                <li>\n                  <a href=\"/learn\">Learn</a>\n                </li>\n              </ul>\n            </div>\n\n            <div>\n\n              <div id=\"carouselExampleControls\" class=\"carousel slide\" data-interval=\"false\">\n                <div class=\"carousel-inner\">\n                  <div class=\"carousel-item active\">\n                    <ProblemCard\n                      id={currentProblem.id}\n                      problem={currentProblem.problem}\n                      solution={currentProblem.solution}\n                      answer={currentProblem.answer}\n                      addScore={addScore}\n                      index={problems.length}\n                      formula={true}\n                    />\n                  </div>\n                  {\n                    problems.map((problem) => {\n                      return <div class=\"carousel-item\">\n                        <ProblemCard\n                          id={problem.problem_id}\n                          problem={problem.problem_title}\n                          solution={problem.problem_solution}\n                          answer={problem.problem_answer}\n                          addScore={addScore}\n                          index={problems.indexOf(problem)}\n                          formula={false}\n                        />\n                      </div>\n\n                    })\n                  }\n\n                </div>\n                <a class=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\n\n                  <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                  <span class=\"sr-only\">Previous</span>\n\n                </a>\n                <a class=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\n                  <span class=\"carousel-control-next-icon\" aria-hidden=\"true\">                </span>\n                  <span class=\"sr-only\">Next</span>\n                </a>\n              </div>\n            </div>\n\n            <div >\n              <button class=\"submit-button\" onClick={() => { submitTest() }}>Submit Quiz</button>\n            </div>\n          </div>\n        )}\n\n    </div>\n\n\n\n  ) : (\n      <h1>Loading..</h1>\n    )\n} ","/home/wex/SE/se 222/math/frontend/src/components/createProblem.jsx",["81","82","83"],"/home/wex/SE/se 222/math/frontend/src/components/quiz.jsx",["84","85","86","87","88","89","90"],"import { Fragment, React, useState, useEffect } from 'react';\nimport { create, all } from 'mathjs';\n\nexport default function Quiz() {\n  const config = {};\n  const math = create(all, config);\n\n  const [problems, setProblems] = useState([]);\n  const [variables, setVariables] = useState([]);\n  const [newProblems, setNewProblems] = useState([]);\n  const [choices, setChoices] = useState([]);\n\n  const shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = math.floor(math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n  }\n\n  const fetchProblems = async () => {\n\n    try {\n\n      const response = await fetch(\"http://localhost:8000/problems/fetch\")\n      const parseRes = await response.json()\n\n      const shuffledProblems = shuffle(parseRes);\n      setProblems(shuffledProblems);\n\n    } catch (error) {\n      console.log(\"ERROR:\", error.message);\n    }\n  }\n\n  const randomVar = (min, max) => {\n    min = math.ceil(min);\n    max = math.ceil(max);\n\n    return math.round(math.random() * (max - min) + min)\n\n  }\n\n  const assignVariables = async () => {\n\n    for (const problem of problems) {\n      try {\n\n        const response = await fetch(`http://localhost:8000/variables/fetch/${problem.id}`);\n        const parseRes = await response.json();\n\n        let variableArray = [];\n\n        for (const variables of parseRes) {\n          variableArray.push({\n            variable: variables.variable,\n            value: randomVar(variables.variable_min, variables.variable_max)\n          })\n        }\n\n        setVariables(variable => variable.concat([variableArray]));\n\n      } catch (error) {\n        console.log(\"ERROR: \", error.message);\n      }\n    }\n  }\n\n  const replaceQuestionVariables = async (problem, variable) => {\n\n    try {\n\n      for (let i = 0; i < problem.length; i++) {\n        \n        let question = problem[i].problem_question;\n        let formula = problem[i].problem_formula;\n        let scope = {};\n\n        for (let j = 0; j < variable[i].length; j++) {\n\n          let newQuestion = question.replace(`${variable[i][j].variable}`, `${variable[i][j].value}`);\n          scope[variable[i][j].variable] = variable[i][j].value;\n          question = newQuestion;\n        }\n\n        console.log(formula);\n        console.log(question);\n        console.log(scope);\n        let answer = (math.evaluate(formula, scope));\n        \n        setNewProblems(problem => problem.concat({ question: question, formula: formula, answer}))\n        \n        console.log(\"NEW PROBLEMS:\", newProblems);\n      }\n      \n    } catch (error) {\n      console.log(\"ERROR: \", error.message);\n    }\n  }\n  \n  const x = 1;\n  const y = 2;\n\n  console.log(\"PROBLEMS\", problems);\n  console.log(\"VARIABLES:\", variables);\n  \n  useEffect(() => {\n    fetchProblems();\n  }, [])\n\n  useEffect(() => {\n    assignVariables();\n  }, [problems]);\n\n  useEffect(() => {\n    replaceQuestionVariables(problems, variables);\n  }, [variables]);\n\n  return (\n    <Fragment>\n      <div>\n      {newProblems.length !== 0\n          ? newProblems.map(problem =>\n            <div>\n              <p>{problem.question}</p>\n              <p>{problem.answer}</p>\n            </div>\n          )\n          : \"\"\n        }\n      </div>\n    </Fragment>\n  )\n}","/home/wex/SE/se 222/math/frontend/src/components/problemCard.jsx",["91","92","93"],"import { Fragment, useState, useEffect } from 'react';\nimport './style.css';\nexport default function Quiz({ id, problem, solution, answer, addScore, index, formula }) {\n    const [choices, setChoices] = useState([])\n    const choicesLetters = [1, 2, 3, 4]\n    const [blankInput, setBlankInput] = useState();\n\n\n    const shuffleArray = (array) => {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n    const fetchChoices = async (id) => {\n\n        try {\n\n            const response = await fetch(`http://localhost:8000/choices/${id}`)\n            const parseRes = await response.json()\n\n            //shuffle choices\n            shuffleArray(parseRes)\n\n            choicesLetters[0] = { id: parseRes[0].id, name: 'A.) ', content: parseRes[0].content, is_correct: parseRes[0].is_correct }\n            choicesLetters[1] = { id: parseRes[1].id, name: 'B.) ', content: parseRes[1].content, is_correct: parseRes[1].is_correct }\n            choicesLetters[2] = { id: parseRes[2].id, name: 'C.) ', content: parseRes[2].content, is_correct: parseRes[2].is_correct }\n            choicesLetters[3] = { id: parseRes[3].id, name: 'D.) ', content: parseRes[3].content, is_correct: parseRes[3].is_correct }\n\n            setChoices(choicesLetters)\n\n        } catch (error) {\n            console.error(error.message)\n\n        }\n\n    }\n\n    const handleClick = (isCorrect) => {\n        if (isCorrect) {\n            console.log(addScore())\n        }\n        else {\n            console.log(isCorrect)\n        }\n\n        let choiceContainer = document.getElementById(`choices${id}`);\n        choiceContainer.style.display = \"none\"\n    }\n\n    const onChange = (event) => {\n        event.preventDefault();\n        setBlankInput(event.target.value);\n    }\n\n    const handleAnswerSubmit = (event) => {\n        event.preventDefault();\n        let inputContainer = document.getElementById(`form${id}`);\n       \n        if (blankInput == answer) {\n            console.log(addScore())\n        } else {\n            console.log(false)\n        }\n        inputContainer.style.display = \"none\"\n    }\n\n\n    useEffect(() => {\n        fetchChoices(id)\n    }, [])\n\n    return (\n\n        <div class=\"body-problem\">\n            <div className=\"problem-card\">\n\n                <div class=\"card border-info mb-3\">\n                    <div class=\"card-body\">\n                        <p>{problem}</p>\n\n                        {!formula ? (\n                            <div id={\"choices\" + id}>\n                                {choices.map((c) => {\n\n                                    return <div key={c.id} class=\"choices\">\n                                        <ul>\n                                            <li class=\"li-choices\">\n                                                <button value={c.content} onClick={() => { handleClick(c.is_correct) }}>{c.name + \" \" + c.content}</button>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                })}\n                            </div>\n\n                        )\n                            : (\n                                <div id={\"form\" + id}>\n                                    <form onSubmit={handleAnswerSubmit}>\n                                        <input\n                                            id=\"blankInput\"\n                                            value={blankInput}\n                                            onChange={onChange}\n                                            required\n                                        >\n                                        </input>\n                                        <button type=\"form\">Submit</button>\n                                    </form>\n                                </div>\n                            )}\n\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n\n    )\n}","/home/wex/SE/se 222/math/frontend/src/components/tacher-page.jsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":15},{"ruleId":"98","severity":1,"message":"102","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":18},{"ruleId":"98","severity":1,"message":"103","line":10,"column":10,"nodeType":"100","messageId":"101","endLine":10,"endColumn":17},{"ruleId":"98","severity":1,"message":"104","line":10,"column":19,"nodeType":"100","messageId":"101","endLine":10,"endColumn":29},{"ruleId":"98","severity":1,"message":"105","line":11,"column":9,"nodeType":"100","messageId":"101","endLine":11,"endColumn":23},{"ruleId":"98","severity":1,"message":"106","line":14,"column":10,"nodeType":"100","messageId":"101","endLine":14,"endColumn":20},{"ruleId":"98","severity":1,"message":"107","line":14,"column":22,"nodeType":"100","messageId":"101","endLine":14,"endColumn":35},{"ruleId":"98","severity":1,"message":"108","line":15,"column":10,"nodeType":"100","messageId":"101","endLine":15,"endColumn":22},{"ruleId":"98","severity":1,"message":"109","line":15,"column":24,"nodeType":"100","messageId":"101","endLine":15,"endColumn":39},{"ruleId":"98","severity":1,"message":"110","line":16,"column":10,"nodeType":"100","messageId":"101","endLine":16,"endColumn":17},{"ruleId":"98","severity":1,"message":"111","line":16,"column":19,"nodeType":"100","messageId":"101","endLine":16,"endColumn":29},{"ruleId":"112","severity":1,"message":"113","line":65,"column":21,"nodeType":"114","messageId":"115","endLine":65,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":72,"column":21,"nodeType":"114","messageId":"115","endLine":72,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":79,"column":21,"nodeType":"114","messageId":"115","endLine":79,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":95,"column":6,"nodeType":"118","endLine":95,"endColumn":17,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":101,"column":6,"nodeType":"118","endLine":101,"endColumn":8,"suggestions":"121"},{"ruleId":"98","severity":1,"message":"122","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":14},{"ruleId":"98","severity":1,"message":"123","line":53,"column":17,"nodeType":"100","messageId":"101","endLine":53,"endColumn":25},{"ruleId":"98","severity":1,"message":"123","line":97,"column":17,"nodeType":"100","messageId":"101","endLine":97,"endColumn":25},{"ruleId":"98","severity":1,"message":"103","line":11,"column":10,"nodeType":"100","messageId":"101","endLine":11,"endColumn":17},{"ruleId":"98","severity":1,"message":"104","line":11,"column":19,"nodeType":"100","messageId":"101","endLine":11,"endColumn":29},{"ruleId":"98","severity":1,"message":"124","line":102,"column":9,"nodeType":"100","messageId":"101","endLine":102,"endColumn":10},{"ruleId":"98","severity":1,"message":"125","line":103,"column":9,"nodeType":"100","messageId":"101","endLine":103,"endColumn":10},{"ruleId":"116","severity":1,"message":"126","line":110,"column":6,"nodeType":"118","endLine":110,"endColumn":8,"suggestions":"127"},{"ruleId":"116","severity":1,"message":"128","line":114,"column":6,"nodeType":"118","endLine":114,"endColumn":16,"suggestions":"129"},{"ruleId":"116","severity":1,"message":"130","line":118,"column":6,"nodeType":"118","endLine":118,"endColumn":17,"suggestions":"131"},{"ruleId":"98","severity":1,"message":"102","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":60,"column":24,"nodeType":"134","messageId":"115","endLine":60,"endColumn":26},{"ruleId":"116","severity":1,"message":"135","line":71,"column":8,"nodeType":"118","endLine":71,"endColumn":10,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'choices' is assigned a value but never used.","'setChoices' is assigned a value but never used.","'choicesLetters' is assigned a value but never used.","'blankInput' is assigned a value but never used.","'setBlankInput' is assigned a value but never used.","'showSolution' is assigned a value but never used.","'setShowSolution' is assigned a value but never used.","'correct' is assigned a value but never used.","'setCorrect' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchQuestions'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has missing dependencies: 'fetchProblems' and 'fetchValues'. Either include them or remove the dependency array.",["140"],"'type' is assigned a value but never used.","'parseRes' is assigned a value but never used.","'x' is assigned a value but never used.","'y' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProblems'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'assignVariables'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has missing dependencies: 'problems' and 'replaceQuestionVariables'. Either include them or remove the dependency array.",["143"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has missing dependencies: 'fetchChoices' and 'id'. Either include them or remove the dependency array.",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [fetchQuestions, variables]",{"range":"157","text":"158"},"Update the dependencies array to be: [fetchProblems, fetchValues]",{"range":"159","text":"160"},"Update the dependencies array to be: [fetchProblems]",{"range":"161","text":"162"},"Update the dependencies array to be: [assignVariables, problems]",{"range":"163","text":"164"},"Update the dependencies array to be: [problems, replaceQuestionVariables, variables]",{"range":"165","text":"166"},"Update the dependencies array to be: [fetchChoices, id]",{"range":"167","text":"168"},[2687,2698],"[fetchQuestions, variables]",[2767,2769],"[fetchProblems, fetchValues]",[2832,2834],"[fetchProblems]",[2885,2895],"[assignVariables, problems]",[2975,2986],"[problems, replaceQuestionVariables, variables]",[2258,2260],"[fetchChoices, id]"]